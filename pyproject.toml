[tool.poetry]
name = "django_boilerplate"
version = "2025"
description = "The Ultimate Django Application Template"
license = "MIT"
authors = ["Gorschal Igor <igor@gorschal.com>"]
repository = "https://github.com/neegor/django_boilerplate"
readme = "README.md"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/neegor/django_boilerplate/issues"

[tool.poetry.dependencies]
python = "^3.11"
Django = "^5.1.6"
psycopg2-binary = "^2.9.7"
django-environ = "^0.12.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.0"

[tool.poetry.group.production.dependencies]
gunicorn = "^23.0.0"
gevent = "^24.11.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
exclude = [
    "manage.py", 
    "_project_", 
    "**/migrations"
]

[tool.ruff.lint]
select = [
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "D",  # pydocstyle
    "E",  # Error
    "F",  # pyflakes
    "I",  # isort
    "ISC", # flake8-implicit-str-concat
    "N",  # pep8-naming
    "PGH",  # pygrep-hooks
    "PTH", # flake8-use-pathlib
    "Q",  # flake8-quotes
    "S",  # bandit
    "SIM",  # flake8-simplify
    "TRY",  # tryceratops
    "UP",  # pyupgrade
    "W",  # Warning
    "YTT", # flake8-2020
]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.mccabe]
max-complexity = 5

[tool.ruff.lint.pydocstyle]
convention = "google"
